虚拟机VMware
在VMware中新建一个虚拟机,然后自定义配置,网络选择NAT模式,最总的的是要给虚拟机指定要安装系统的镜像文件,在
CD/DVD中配置,不指定镜像文件,哪来的操作系统啊?  一定要记住

一:linux目录结构
linux只有一个盘,这个盘上有许多文件夹 
bin:存放而二进制可执行文件
sbin:存放二进制可执行文件,只有root才有权限访问
etc:存放系统配置文件
usr:用于存放共享的系统资源,等价于program file (程序文件) 以后的软件可以装在这里面,应用程序存放目录
home:用于存放用户文件的根目录
root:超级用户目录,如果以管理员身份登录系统则默认目录就在root下 ,根目录是/
dec:用于存放设备文件
lib:存放跟文件系统中运行程序需要依赖的库函数

查看当前所在的目录:pwd
查看当前目录下的所有文件:ll (两个L)
获取地址:ifconfig
secureCRT:简单地说是Windows下登录UNIX或Linux服务器主机的软件。
使用这个软件登录linux需要在虚拟机开启linux,或者链接的某个linux服务器是开机状态的,
记住 主机名不论在那个地方:localhost是指的本机,ip地址也是主机名,域名也可以是主机名
使用secureCRT连接linux需要知道这台服务器的主机名,其实就是ip地址或者这个服务器的域名
一个服务器的域名可能不唯一,因为这台服务器可能提供多个服务,但是ip是绝对唯一的

一个URL=协议+主机名+端口号+目录  主机名=localhost/ip/域名

secureCRT 设置编码格式UTF-8后还是中文乱码
在属性中设置完Character encoding为UTF-8后，还是中文乱码，这样还不行，还得设置字体为宋体
在设置字体时，设置该字体的字符集为CHINESE_GB2312而不是西方，这样，在服务器端支持UTF-8中文的情况下，就不会出现中文乱码了.

核心命令:
1 clear 清空
2:
ls:查看当前目录下的所有文件(不包括隐藏文件)
ls -a 包括隐藏文件
ls -al 以列表的形式列出
ls -l 以列表的形式列出
使用简化版即可:ll    ll/home/ 可以指定目录 查看该目录下的内容
但是注意 这个指定目录必须要写全路径,即从根目录开始写


3cd 切换目录
cd / 切换根目录
cd ..切换到上一级目录
cd ~ 切换到当前用户的目录
cd - 切换到上一次访问的目录

4touch 创建文件比如 touch 1.txt

5pwd 打印当前工作目录的全路径(就是打印目录的名字,不是指目录中的文件)

6
mkdir  创建目录 如果不加-pv参数的话  mkdir只能创建多级目录,比如创建父目录不存在的目录  c/d/e 假如d是不存在的那么e就无法创建
mkdir -pv
-p 代表父目录不存在的情况下先生成父目录
-v 显示命令执行过程中的详细信息

创建目录 可以使用绝对路径 也可以使用相对路径
比如  mkdir /root/a  绝对路径
      mkdir ./b   当前路径下创建b目录
      

7./ 表示当前目录 ../上一级目录

8 cat 显示文本文件内容 
比如 car 1.txt
但是这个适合内容不多的

more 也用于显示文本文件内容
这个有分页的功能,适合内容多内容
操作(输入指令后进行这些操作可以有响应的功能):
ENTER :向下换行  空格:翻页
b:返回上一屏  q:退出内容查看

less:分页显示内容  功能更多
支持从内容中查找东西   
参数:-m 显示当前页内容的百分比
     -N 显示行号
     
     比如less -mN 文本文件名字
操作:
/字符串(向后查找) ?字符串(向前查找 )

tail 用于查看指定文本文件的末尾内容
tail -10/root/1.txt  第一个参数指定查看后面的行数
 
 
 9: cp  目录或文件1 目录或文件2    将文件赋值到指定目录中
 目录或文件2不存在的时候会创建文件
 -r参数 不加-r参数无法赋值目录,只能赋值文件
 -b  如果复制文件到目录或者文件2中已经存在的话,不加-b会覆盖,加了-b的话会进行文件备份
 
 举例:
 当前所在目录root
 cp 1.txt 2.txt  会在root下将1文本赋值到2文本中, 如果该文件不存在则创建,存在的话就覆盖之前的内容
 cp /root/1.txt /home/zzz 将root下的1赋值到home的zzz目录下
 
 要注意的是当我们将某个文件或者某个目录复制到某个目录下,那么这个目录一定要存在
 如果不存在的话不会出错,但是会将这个目录当成文件名
 比如 1.txt /root/a  假如a不存在,那么a就是一个1.txt的复制文件而不是目录
 
 
cp -r  可以复制目录到指定的目录   
有一个规律 如果地址1是一个文件,那么路径二不存在时则会创建文件
          如果路径1是一个目录,那么路径二不存在的时候会创建目录
 

10 rm  删除文件
但是这种不带参数的会询问你是否删除
rm -f  带上f参数表述强制删除文件,不询问你
删除目录需要带上 -r参数(类似于cp)

11mv 移动文件或目录 (剪切)
  mv 路径1  路径2   将路径1的文件移动到路径二中  还是一样 路径二不存在则会创建
  所以mv可以用来重命名 比如
  mv 1.txt 2.txt  将当前文件的1.txt 移动到2.txt文件中,很明显2.txt不存在的话 就会创建2.txt,那么就实现了文件的重命名
  
12find 查找文件 
  find /root/ -name 'in*'
  在root下寻找名字带in的文件


13vim(或vi指令)操作文本文件内容的 (查看文本文件内容 cat more less和tail)
vi进入vim编辑器,编写文档内容
vim 文件路径  进入一般模式
按下"i" 从一般模式进入插入模式
(i:光标前插入
shift i:当前行的开始插入
a:光标后插入
shift+a:在末尾进行插入
o:在光标当前行的下一行插入新行
Shit+o:在上一行插入新行
)

按下 esc 从插入模式退回一般模式
然后输出:wq退出一般模式,结束编辑

(在一般模式下:
p;复制一行
nyy:复制n行
dd:删除当前行
:wq 退出vim

)

14grep命令 全局正则表达式
用于过滤或者搜索指定字符(find是用来找文件的,grep是用来找文本中自定内容的)

grep -i   mysql /root/1.txt
参数i指的是忽略大小写,后面的指定文件
中间的是正则表达
grep -i 不一定是对指定文件进行过滤,只要是内容都可以过滤,还可以喝其他命令联合使用
比如我们可以先查出内容再去过滤

比如cat /root/1.txt | gerp -i *****
    ps -ef | gerp -i
    

15ps -ef 查看任务管理器,对进程的一次查看

管道命令
命令1 | 命令2   命令1是命令二的输入 用这种方式可以使用grep对某些内容再去过滤

ps -ef 参看一次进程


16kill 删除进程
格式  kill -9 pid  进程的id 

17!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
要在linux上安装jdk 数据库redis 需要先在linux安装它们的依赖包,类似于window的framework一样


18使用secureCRT连接linux服务器的时候,如果linux没有启动并且没有登录,那么是不能连接的

19tar 命令
压缩格式:tar -zcvf 路径1(压缩后的文件存放位置以及压缩包文件名) 路径二(要压缩的文件所在位置)
解压缩格式; tar -zxvf 压缩包所在路径(只能讲压缩包解压在所处文件夹)


20reboot 重启
 halt 关机命令


21:root 管理员用户
更改权限命令 chmod
r:读取权限  数字代号为4
w;写入权限 数字代号为2
x:执行或切换权限    数字代号为1

--- --- ---  第一个是当前用户对文件的权限 第二个是所在组的其他成员对这个问价你的处理权限 第三个个出自身和所在组以外的所有成员
chmod u-r(+)wx xxx(某个文件)  这个命令是 取消当前用户对某个文件的rwx权限
chmod g-(+)rwx xxx        这个命令是 取消当前用户所在组的其他成员对某个文件的rwx权限
chmod o-(+)rwx xxx         o代表其他用户

root很特殊,root有所有权限

另一种形式
chmod 777 目录
每个数字代表了一个 三个权限

7=1+2+4 代表具有所有权限,位置代表了不同的用户  用1 2 4来组合

22查看帮助文档

外部命令:man+外部命令
内部命令:help+内部命令

23在linux安装jdk(我的linux密码181199)
使用FileZilla 软件 将本机上的文件传输给linux服务器
用什么用户登录的,现将文件拖到root(管理员)或者home(用户)下
安装到usr上面去,将软件安装到/usr/local/src中去,在src中新建三个文件夹,分别将tomcat mysql和java安装上去

把jdk tomcat mysql的压缩包放在对应文件夹中
一安装java
将jdk的压缩包放到/usr/local/src/java中去,解压缩
添加linux支持jdk的依赖包
然后配置环境变量
配置环境变量：
1 vim /etc/profile  编辑这个profile文件
2 在末尾行添加
#set java environment
JAVA_HOME=/usr/local/src/java/jdk1.7.0_71
CLASSPATH=.:$JAVA_HOME/lib.tools.jar
PATH=$JAVA_HOME/bin:$PATH
export JAVA_HOME CLASSPATH PATH
保存退出
3 source /etc/profile  使更改的配置立即生效
4 java -version  查看JDK版本信息，如果显示出1.7.0证明成功


二安装tomcat
1上传tomcat的压缩包到linux(使用FileZilla)
2位置是/usr/local/src/tomcat下
3解压缩
4重命名为 mv  apache-tomcat-7.0.57    tomcat(方便使用)
5启动tomcat 启动tomcat下的bin/start.up即可 不需要指令 给出路径即可
直接输入可执行文件的路径即可
6访问linux上的tomcat  不再是用的localhost  只有在本机上访问本机的tomcat才是localhost
我们安装在电脑上的虚拟机相当于另外一台机器了,要使用ip去访问,ifconfig找到linux 的ip地址
7开启linux 的8080端口
具体操作在下面的mysql中
9然后就行了 用ip:8080/访问即可
运行linux上的可执行程序只需要输入该程序的完整路径名即可,不需要命令


三安装mysql
  1清理CentOS7下的MariaDB。

[root@localhost ~]#rpm -qa | gremp mariadb

        [root@localhost ~]# rpm -e --nodeps mariadb.x86_64 1:5.5.41-2.el7_0
2 在/usr/local/src/mysql
  中执行
  yum -y install wget
  wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm (下载mysql的官方yum源)
  yum -y install mysql57-community-release-el7-10.noarch.rpm(安装这个yum)
  yum -y install mysql-community-server(安装mysql服务器)
  
  service mysqld start 启动mysql服务器 不同于Windows下载mysql是开机自动启动mysql,linux安装mysql后需要手动开启,也可以设置开机自启
  service mysqld restart 
  service mysqld stop
  service mysqld status
  systemctl enable mysqld(开机启动)
对mysql的配置:
  1获得mysql的初始化密码
  /var/log/mysqld.log  初始密码放在这个文件夹下
  通过
  cat  /var/log/mysqld.log |grep -i password  默认账户是root 密码:!tV%u,rgi8lE(通过上面方法找到)
  2登录
  mysql -uroot -p
  然后回车然后输入密码
  3重新设置登录密码
  SET PASSWORD =PASSWORD('root1234');
  我这里设置的是root1234
  4设置开机自动启动mysql
  systemctl enable mysqld
  systemctl daemon-reload
  5开启远程访问
  首先要开启3306端口和8080端口
  
  centos7下永久开启3306和8080端口具体操作如下
        1、关闭firewall：(关闭linux自带的防火墙)
        systemctl stop firewalld.service
        systemctl disable firewalld.service
        systemctl mask firewalld.service

        2、安装iptables防火墙
        yum install iptables-services -y

        3.启动iptables防火墙

        # systemctl enable iptables
        # systemctl start iptables

        4.查看防火墙状态

        systemctl status iptables

        5编辑防火墙，增加端口
        vi /etc/sysconfig/iptables #编辑防火墙配置文件
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT
        :wq! #保存退出

        3.重启配置，重启系统
        systemctl restart iptables.service #重启防火墙使配置生效
        systemctl enable iptables.service #设置防火墙开机启动
   6进入mysql给响应的账户赋予远程登录权限
        mysql和tomcat不一样,tomcat是web服务器,只要开启服务器以及开放端口后就可以访问
        但是mysql是数据库,数据库有账号密码的,开启了3306端口代表我们可以远程访问,但是前提是
        我们使用的mysql账号有远程登录的权限,这是为了安全着想的
        
        为用户赋予权限语法,进去mysql
        CREATE USER 'testuser'@'localhost' IDENTIFIED BY 'testuserpass';(创建子用户,这里一开始有root)
        GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'youpassword' 
               这里是限制权限    *.*是在那个数据库的那个表     这里这个%可以写单一地址,代允许在特定地址进行远程登录  %是所有地址都可以远程登录
  
     以root账户为例
      GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'root1234' 
  
  
  
四安装redis
  nosql:非关系型数据库 常用的用redis mongoDB HBase
  redis 非关系型的key-value型数据库 用于高速的内容缓存.加载到内存,提高性能,处理大量数据的高并发访问
  redis是一种基于内存的数据库,放在redis的数据都是直接放在内存中的
  但是基于内存并不是说redis数据库就不存数据到硬盘上,这是错的.当我们频繁使用的时候是在内存中处理的,当我们
  有一段时间不适使用的时候,就会有线程将内存中的数据刷新到硬盘上,我们在redis上存储的数据都是不会消失的,不是说一关机就没了
  只能说我们在一段时间内的修改都是在内存上直接修改,基于一定规则(比如一定时间,或者长时间没使用,或者某个业务结束)再将内存中
  的修改提交到硬盘上


  redis有密码这一说法:
  CONFIG set requirepass "runoob" 设置密码
  CONFIG set requirepass "" 关闭密码
  jedis.auth("runoob");//此处为你设置的密码  在java里面连接redis时如果有密码则在这一条连接上要设置这个密码
  hbase:非关系的列存储数据库,
  文档类型:mongoDB
  
  一般嵌入式都是使用C语言进行开发?为什么呢?
  因为c语言更加地接近内存以及机器语言,更加方便地操作内存
    
    redis安装包:是一种源码形式提供 也就是提供的.c文件(相当于java中的.java文件) 
    1需要将.c变异成.o(相当于.class)文件 需要依赖gcc编译器(一种c语言编译器)
    2将编译后的文件安装在linux上,安装形式就是获得可运行的文件,.exe
    (在java里面可以将.class打成jar包然后可以双击运行)
     window下使用redis很简单,只需要下载压缩包解压缩就能使用,因为window是直接支持redis的
     linux下安装redis(安装包里面都是c源文件)
    1获取linux安装包,上传到(FileZilla)root目录下
    2解压压缩包
    3编译源码 进入解压后的文件 然后执行make指令就行
    4编译完成后 在usr/local创建redis文件
    5安装redis
    在源码文件所在目录中(/root/redis.../)执行 指令
    make PREFIX=/usr/local/redis install
    6配置redis的配置文件
    在redis的解压缩文件中有一个redis.conf配置文件复制到我们创建的/usr/local/redis下面去
    7进入/usr/local/redis/bin启动redis.server
    这种方式是前端方式启动redis,但是这种方式启动redis后就无法输入命令了,如要另外起一个窗口然后启动客户端client才能执行操作
    
    后端方式启动:
    修改下redis.conf配置文件,
    将里面的daemonize no改为daemonize yes
    然后启动方式:
    redis服务端路径  /redis.conf(加一个配置文件的路径,没有+号,在后面拼接就行) 
    
    7redis默认端口号6379,要去开启这个端口号,放入在上面的mysql中
    8启动客户端, 直接输入客户端文件的路径即可
    
 五redis支持的数据类型,因为redis是一种key-value
 1string 字符串
 2hash  哈希表
 3list 列表
 4set  集合
 5sorted set 有序集合
 
 String:   
     set name tom 这个命令设置了key名和一个字符串类型的数据
    setnx key value  还是设置值为字符串 只不过如果当前key存在则设置不生效
    setex 设置 key 对应的值为 string 类型的 value，并指定此键值对应的有效期
    setrange 设置指定 key 的 value 值的子字符串。 setrange name 8 gmail.com  指的是从name的第8位开始设置
    mset 一次设置多个 key 的值，
     get 获取 key 对应的 string 值,如果 key 不存在返回 nil。
    getrange 获取指定 key 的 value 值的子字符串。
    mget  一次获取多个 key 的值，如果对应 key 不存在，则对应返回 nil。
    incr 对 key 的值做加加操作 注意 incr 一个不是 int 的 value 会返回错误
    incrby  同 incr 类似，加指定值 ，key 不存在时候会设置 key，并认为原来的 value 是 0
     decr 减减
     decrby同上
     append 给指定 key 的字符串值追加 value,返回新字符串值的长度。
     strlen 获取长度
  
  hashes类型:  
    Redis hash 是一个( string 类型的 field(字段) )和 value 的映射表，hash 特别适合用于存储对象。
    redis和传统的hash不一样,hash是指根据将要存储的关键值算出hash值然后存储,
    redis的hash数据类型是一个映射表,在这个映射表里可以添加大容量的key-value键值对,所以适合存放对象
    redis的hash实质是一个映射表,存对象的键值对的
   
   hset：设置值。格式是：hset hash的key  (项的key 项的值)
   hmset hash的key (项的key 项的值) 可多对
   hget myhash field1   可以获得指定hash对象中某个字段的值
   hmget myhash field1 field2 field3  可以获得hash中多个字段的值
  
 lists 类型及操作
  list 是一个链表结构，主要功能是 push、pop、获取一个范围的所有值等等，操作中 key 理解为链表的名字。
  Redis 的 list 类型其实就是一个每个子元素都是 string 类型的双向链表。
  lpush 在 key 对应 list 的头部添加字符串元素  lpush mylist "world"
   rpush 在 key 对应 list 的尾部添加字符串元素  rpush mylist2 "hello"
  linsert  在 key 对应 list 的特定位置之前或之后添加字符串元素  linsert mylist3 before "world" "there"
   lset 设置 list 中指定下标的元素值(下标从 0 开始)   lset mylist4 0 "four"
   lrem   从 key 对应 list 中删除 count 个和 value 相同的元素。
   lpop 从 list 的头部删除元素，并返回删除元素
   rpop 从 list 的尾部删除元素，并返回删除元素
   
   sets 类型及操作
   set 是集合，和我们数学中的集合概念相似，对集合的操作有添加删除元素，有对多个集合
   求交并差等操作，操作中 key 理解为集合的名字,set 的是通过 hash table 实现的
   sadd  sadd myset "hello" 向名称为 key 的 set 中添加元素
   srem 删除名称为 key 的 set 中的元素 memb  sadd myset2 "one"
   
   sorted sets 类型及操作
   zadd ...
 redis多库,类似于mysql数据库中可以创建多个数据库,同样的redis也可以做到这样,
 一个redis数据库最多可以提供16个数据库,下表从0到15,客户端默认选择0号
 ps:在使用客户端连接redis时,要保证redis在服务端已经打开了,然后使用后端打开方式,记不住在那个地方可以使用find指令找文件
   在linux窗口上连接mysql服务端需要使用命令mysq -u账户 -p密码
   而linux窗口上连接redis需要去手动打开redis的客户端文件才能,即输入客户端文件所在的路径,运行它
 
 keys * 命令 可以得到所有的键
 redis虽然是基于内存的,但是redis上存在有线程,它会根据一段时间将内存上的数据刷到硬盘上去,想一下如果不刷到硬盘上,
 那么redis上存放的数据就会 在关机后消失,比如启动redis后,我网redis里面存值或者取值,在某一段时间内都是在内存上直接操作
 而不是频繁而从硬盘存取,当有一段时间没有用这个数据的时候,那么redis可以选择将这个数据刷到硬盘上去,需要的时候再取出来存在内存上
 而mysql这个关系数据库每一次的存取都是通过操作硬盘的,所以效率低,不能应对高并发.
 
  select * 可以选择redis里面的数据仓库(组多16个) select 1 选择1号仓库
  move key 仓库号  可以将某个key从当前仓库移到指定仓库
  ps:redis可以一台机器配置很多个,只需要配置它们的端口号不一样即可
  dbsize:或者key的数目
  
  
  redis消息订阅与发布:
  subscribe channel(随意一个频道名字)
  pubscribe channel* 批量订阅
  publish channel(频道名字) content(内容) 发布消息
  当在一个redis客户端订阅频道后,那么就处于等待状态,等待别人发布消息
  在另外一个窗口可以指定频道发布消息
  
  事务:
  redis中提供了multi exec discard 三个命令是实现事务的基石
  redis的事务所有命令都将会被串行化,事务执行期间,redis不会为其他客户端的请求提供服务(比如一些修改服务),保证了事务中所有名字的原子性执行
  redis事务的某条命令执行不成功时,它会继续执行下去
  
  可以通过MULTI(=mysql中的START TRANSACTION)来开启事务
  然后通过exec/discard来执行或回滚事务的所有操作,相当于mysql中的commit和rollback
  
  
  redis持久化 
  1RDB 在指定的时间间隔内将内存中的数据的数据集快照写入磁盘
  2AOF 将redis中的操作以日志的形式保存,在下次启动redis时会重构redis数据库
 
 
 
 
 
 六 在java中连接redis数据库(rdis和mysql不一样,不会开机自动启动,要手动设置下)
  和mysql类似,连接需要添加相应的依赖,java提供接口.redis提供实现
  jedis工具:
  使用连接池连接: 如果要使用连接池需要引入commons pools包  单一连接直接用 Jedis jedis=new Jedis();
  JedisPool pool = new JedisPool(new JedisPoolConfig(), "localhost");
  第一个参数JedisPoolConfig() 是一个配置对象,可以对连接池进行一些规范,比如最大连接数啊,空闲时间之类的,使用默认也可以
  第二个参数是redis数据库的ip地址,本地的话就是localhost
   这个和mysql的建立连接所需参数不一样,mysql需要的用户,密码和url=jdbc:mysql://localhost:3306/数据库名
   
   Jedis jedis = pool.getResource();
   jedis.auth("runoob");//此处为你设置的密码 连接redis的密码
   
  
    然后使用这个jedis对象对各种数据进行操作
    对于字符串
    jedis.set("runoobkey", "www.runoob.com");
   jedis.get("runoobkey")
   对于list:
    jedis.lpush("site-list", "Runoob");
    jedis.lpush("site-list", "Google");
    jedis.lpush("site-list", "Taobao");
  
    List<String> list = jedis.lrange("site-list", 0 ,2);
    这里的函数名和上面的redis数据库指令很像
    同理还有rpush 从list的尾部插入  lpop 从头部删除 rpop从尾部删除 lset 用来设置指定下表的值
    lrange(,num1,num2)
    
  
  
  
 特别说明:
      说明一下mysql服务器和客户端的分别，服务器是指安装mysql的那台机器，而客户端是远程通过网络使用服务器上的mysql,
      比如在window 上通过命令窗口连接mysql,此时的窗口就是一个客户端,那么相应的在linux上安装mysql的服务端是提供服务的,
      我们想要对表进行修改需要通过客户端连接服务端,所以既然装了服务端,也安装了客户端.
      比如在window上安装了mysql后,需要有命令窗口去连接mysql服务器,那么同样的,mysql的可视化界面SQLyong就是一个客户端
      通过指定ip 端口号 用户密码,sqlyong就是一个客户端,可以通过客户端连接数据库
      为什么windows命令窗口可以充当客户端,而linux却需要安装客户端呢?
      答案很简单......原生的linux并没有这个功能,需要我们同时安装客户端,就好像在window上安装SQLYong一样














